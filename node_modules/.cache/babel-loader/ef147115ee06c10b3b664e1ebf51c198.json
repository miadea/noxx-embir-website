{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport Layout from '../components/MyLayout.js';\nimport Gallery from \"react-grid-gallery\";\nimport Lightbox from 'react-images';\n\nvar GalleryPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GalleryPage, _React$Component);\n\n  function GalleryPage() {\n    var _this;\n\n    _classCallCheck(this, GalleryPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GalleryPage).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleWindowSizeChange\", function () {\n      _this.setState({\n        width: window.innerWidth\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"openLightbox\", function (currentImage, event) {\n      _this.setState({\n        currentImage: currentImage,\n        lightboxIsOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeLightbox\", function () {\n      _this.setState({\n        currentImage: 0,\n        lightboxIsOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"gotoPrevious\", function () {\n      _this.setState({\n        currentImage: _this.state.currentImage - 1\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"gotoNext\", function () {\n      _this.setState({\n        currentImage: _this.state.currentImage + 1\n      });\n    });\n\n    _this.state = {\n      currentImage: 0,\n      lightboxIsOpen: false,\n      width: window.innerWidth\n    };\n    return _this;\n  }\n\n  _createClass(GalleryPage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      window.addEventListener('resize', this.handleWindowSizeChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.handleWindowSizeChange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isMobile = this.state.width <= 500;\n\n      if (isMobile) {\n        return React.createElement(\"div\", null, this.props.images.map(function (image, i) {\n          return React.createElement(\"img\", {\n            src: image.thumbnail.thumbnail,\n            key: image.thumbnail.thumbnail,\n            style: {\n              width: \"100%\",\n              border: 0,\n              verticalAlign: \"middle\",\n              marginBottom: 5\n            }\n          });\n        }));\n      }\n\n      return React.createElement(\"div\", null, React.createElement(\"div\", {\n        style: {\n          display: \"block\",\n          minHeight: 1,\n          width: \"100%\",\n          overflow: \"auto\"\n        }\n      }, React.createElement(Gallery, {\n        onClick: this.openLightbox,\n        enableImageSelection: false,\n        enableLightbox: false,\n        rowHeight: 450,\n        onClickThumbnail: this.openLightbox,\n        images: this.props.images.map(function (_ref) {\n          var thumbnail = _ref.thumbnail;\n          return _objectSpread({}, thumbnail, {\n            src: ''\n          });\n        })\n      })), React.createElement(Lightbox, {\n        images: this.props.images.map(function (_ref2) {\n          var lightbox = _ref2.lightbox;\n          return lightbox;\n        }),\n        backdropClosesModal: true,\n        preventScroll: false,\n        onClose: this.closeLightbox,\n        onClickPrev: this.gotoPrevious,\n        onClickNext: this.gotoNext,\n        currentImage: this.state.currentImage,\n        isOpen: this.state.lightboxIsOpen\n      }));\n    }\n  }]);\n\n  return GalleryPage;\n}(React.Component);\n\nexport { GalleryPage as default };","map":null,"metadata":{},"sourceType":"module"}