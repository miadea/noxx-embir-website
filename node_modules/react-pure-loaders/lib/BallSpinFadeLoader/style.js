"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const glamor_1 = require("glamor");
const mixins_1 = require("../mixins");
const utilities_1 = require("../utilities");
const radius = '25px';
const ballSpinFade = glamor_1.keyframes({
    '100%': {
        opacity: 1,
        transform: 'scale(1)',
    },
    '50%': {
        opacity: 0.3,
        transform: 'scale(0.4)',
    },
});
function ballSpinFadeLoader() {
    const n = 8;
    let i = 1;
    const grid = {};
    for (; i < 9; i += 1) {
        const quarter = (parseInt(radius, 10) / 2) + (parseInt(radius, 10) / 5.5);
        if (i === 1) {
            grid[`> div:nth-child(${i})`] = {
                animation: `${ballSpinFade} 1s ${utilities_1.delay('0.12s', n, i - 1)} infinite linear`,
                left: 0,
                top: radius,
            };
        }
        else if (i === 2) {
            grid[`> div:nth-child(${i})`] = {
                animation: `${ballSpinFade} 1s ${utilities_1.delay('0.12s', n, i - 1)} infinite linear`,
                left: quarter,
                top: quarter,
            };
        }
        else if (i === 3) {
            grid[`> div:nth-child(${i})`] = {
                animation: `${ballSpinFade} 1s ${utilities_1.delay('0.12s', n, i - 1)} infinite linear`,
                left: radius,
                top: 0,
            };
        }
        else if (i === 4) {
            grid[`> div:nth-child(${i})`] = {
                animation: `${ballSpinFade} 1s ${utilities_1.delay('0.12s', n, i - 1)} infinite linear`,
                left: quarter,
                top: `-${quarter}px`,
            };
        }
        else if (i === 5) {
            grid[`> div:nth-child(${i})`] = {
                animation: `${ballSpinFade} 1s ${utilities_1.delay('0.12s', n, i - 1)} infinite linear`,
                left: 0,
                top: `-${radius}`,
            };
        }
        else if (i === 6) {
            grid[`> div:nth-child(${i})`] = {
                animation: `${ballSpinFade} 1s ${utilities_1.delay('0.12s', n, i - 1)} infinite linear`,
                left: `-${quarter}px`,
                top: `-${quarter}px`,
            };
        }
        else if (i === 7) {
            grid[`> div:nth-child(${i})`] = {
                animation: `${ballSpinFade} 1s ${utilities_1.delay('0.12s', n, i - 1)} infinite linear`,
                left: `-${radius}`,
                top: 0,
            };
        }
        else if (i === 8) {
            grid[`> div:nth-child(${i})`] = {
                animation: `${ballSpinFade} 1s ${utilities_1.delay('0.12s', n, i - 1)} infinite linear`,
                left: `-${quarter}px`,
                top: quarter,
            };
        }
    }
    return grid;
}
exports.default = (color) => glamor_1.css(ballSpinFadeLoader(), {
    ' > div': mixins_1.balls(color),
}, {
    ' > div': mixins_1.globalAnimation(),
}, {
    left: '-10px',
    position: 'relative',
    top: '-10px',
    ' > div': {
        position: 'absolute',
    },
});
//# sourceMappingURL=style.js.map