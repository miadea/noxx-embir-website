"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const glamor_1 = require("glamor");
const mixins_1 = require("../mixins");
const utilities_1 = require("../utilities");
const variables_1 = require("../variables");
const size = '25px';
const rotatePacmanHalfUp = glamor_1.keyframes({
    '0%': {
        transform: 'rotate(270deg)',
    },
    '100%': {
        transform: 'rotate(270deg)',
    },
    '50%': {
        transform: 'rotate(360deg)',
    },
});
const rotatePacmanHalfDown = glamor_1.keyframes({
    '0%': {
        transform: 'rotate(90deg)',
    },
    '100%': {
        transform: 'rotate(90deg)',
    },
    '50%': {
        transform: 'rotate(0deg)',
    },
});
const pacmanBalls = glamor_1.keyframes({
    '100%': {
        transform: `translate(-${4 * parseInt(size, 10)}px, -${parseInt(size, 10) / 4}px)`,
    },
    '75%': {
        opacity: 0.7,
    },
});
function pacmanDesign(color) {
    return {
        borderBottom: `${size} solid ${color ? color : variables_1.PRIMARY_COLOR}`,
        borderLeft: `${size} solid ${color ? color : variables_1.PRIMARY_COLOR}`,
        borderRadius: size,
        borderRight: `${size} solid transparent`,
        borderTop: `${size} solid ${color ? color : variables_1.PRIMARY_COLOR}`,
        height: '0px',
        width: '0px',
    };
}
function ballPlacement() {
    const n = 3;
    let i = 0;
    const grid = {};
    for (; i < 4; i += 1) {
        grid[`> div:nth-child(${i + 2})`] = {
            animation: `${pacmanBalls} 1s ${utilities_1.delay('.33s', n, i)} infinite linear`,
        };
    }
    return grid;
}
exports.default = (color) => glamor_1.css(ballPlacement(), {
    position: 'relative',
    ' > div:first-of-type': glamor_1.css(pacmanDesign(color), {
        animation: `${rotatePacmanHalfUp} 0.5s 0s infinite`,
        left: '-30px',
        position: 'relative',
    }),
    ' > div:nth-child(2)': glamor_1.css(pacmanDesign(color), {
        animation: `${rotatePacmanHalfDown} 0.5s 0s infinite`,
        left: '-30px',
        marginTop: (-2 * parseInt(size, 10)),
        position: 'relative',
    }),
    ' > div:nth-child(3), > div:nth-child(4), > div:nth-child(5), > div:nth-child(6)': glamor_1.css(mixins_1.balls(color), {
        height: '10px',
        left: '70px',
        position: 'absolute',
        top: '25px',
        transform: `translate(0,-${parseInt(size, 10) / 4}px)`,
        width: '10px',
    }),
});
//# sourceMappingURL=style.js.map