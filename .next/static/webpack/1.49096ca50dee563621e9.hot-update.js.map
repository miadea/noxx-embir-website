{"version":3,"file":"static/webpack/1.49096ca50dee563621e9.hot-update.js","sources":["webpack:///./components/_gallery.js"],"sourcesContent":["import React from 'react'\nimport Layout from '../components/MyLayout.js'\nimport Img from 'react-image'\nimport { BallBeat } from 'react-pure-loaders';\nimport Gallery from \"react-grid-gallery\";\nimport Lightbox from 'react-images';\n\nexport default class GalleryPage extends React.Component {\n  state = {\n    currentImage: 0,\n    lightboxIsOpen: false,\n    width: window.innerWidth\n  }\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n  render() {\n    const isMobile = this.state.width <= 500;\n    if (isMobile) return (\n      <div>\n        {this.props.images.map((image, i) => {\n          return <div  key={i} style={{\n            background: 'gray',\n            width: \"100%\",\n            height: (image.thumbnail.thumbnailHeight / 2),\n            marginBottom: 2\n          }}>\n            <BallBeat loading color=\"#00BFFF\" />\n          </div>\n          // return <Img src={image.thumbnail.thumbnail} key={image.thumbnail.thumbnail}\n          // style={{\n          //   width: \"100%\", verticalAlign: \"middle\",\n          //   border: 0, marginBottom: 5\n          // }}\n          // loader={\n          //   <BallBeat loading\n          //    color=\"#00BFFF\"\n          //    height=\"100\"\n          //    width=\"100\" />\n          // }\n          // />\n        })}\n      </div>\n    )\n    return (\n      <div>\n        <div style={{\n          display: \"block\", minHeight: 1,\n          width: \"100%\", overflow: \"auto\"\n        }}>\n          <Gallery onClick={this.openLightbox}\n            enableImageSelection={false}\n            enableLightbox={false}\n            rowHeight={450}\n            onClickThumbnail={this.openLightbox}\n            images={this.props.images.map(({thumbnail}) => ({...thumbnail, src: ''}))}\n          />\n        </div>\n        <Lightbox images={this.props.images.map(({lightbox}) => lightbox )}\n          backdropClosesModal\n          onClose={this.closeLightbox}\n          onClickPrev={this.gotoPrevious}\n          onClickNext={this.gotoNext}\n          currentImage={this.state.currentImage}\n          isOpen={this.state.lightboxIsOpen}\n        />\n      </div>\n    )\n  }\n  handleWindowSizeChange = () => {\n    this.setState({ width: window.innerWidth });\n  }\n  openLightbox = (currentImage, event) => {\n    this.setState({ currentImage, lightboxIsOpen: true });\n  }\n  closeLightbox = () => {\n    this.setState({ currentImage: 0, lightboxIsOpen: false });\n  }\n  gotoPrevious = () => {\n    this.setState({ currentImage: this.state.currentImage - 1 });\n  }\n  gotoNext = () => {\n    this.setState({ currentImage: this.state.currentImage + 1 });\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AA+DA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AA1EA;AACA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;AAhEA;AACA;;;;;A","sourceRoot":""}