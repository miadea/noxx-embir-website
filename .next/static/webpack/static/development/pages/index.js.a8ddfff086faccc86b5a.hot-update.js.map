{"version":3,"file":"static/webpack/static/development/pages/index.js.a8ddfff086faccc86b5a.hot-update.js","sources":["webpack:///./components/Header.js"],"sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport MobileHeader from './mobile/header'\nimport { withRouter } from 'next/router'\n\nconst LINKS = [\n  {name: \"Product\", url: '/'},\n  {name: \"Retouching\", url: '/retouching'},\n  {name: \"Architecture\", url: '/architecture'},\n  {name: \"Contact\", url: '/contact'},\n]\n\nexport default class Header extends React.Component {\n  render() {\n    return(\n      <div>\n        <MobileHeader links={LINKS} />\n        <DesktopHeader links={LINKS} />\n      </div>\n    )\n  }\n}\n\nclass DesktopHeader extends React.Component {\n  styles = {\n    nav: {\n      fontSize: \"1.5rem\",\n      height: 100,\n      width: '100%',\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    titleLogoContainer: {\n      flex: 1,\n      paddingLeft: 80,\n    },\n    titleLogo: {\n      height: 60,\n    },\n    fakeLink: {\n      flex: 1,\n    }\n  }\n  render() {\n    let {styles} = this;\n    return(\n      <div className='header-desktop'>\n        <div style={styles.nav}>\n          <div style={styles.titleLogoContainer}>\n            <img style={styles.titleLogo} src=\"/static/TitleLogoWhite.png\" />\n          </div>\n          {LINKS.map(({name, url}) => {\n            return <DesktopHeaderLink key={url} name={name} url={url} selected={url == this.props.router.pathname} />\n          })}\n          <div style={styles.fakeLink}/>\n        </div>\n      </div>\n    )\n  }\n}\nDesktopHeader = withRouter(DesktopHeader)\n\nclass DesktopHeaderLink extends React.Component {\n  styles = {\n    linkStyle: {\n      marginRight: 15,\n      padding: \"50px\",\n      textDecoration: \"none\",\n      color: \"white\",\n\n    },\n    hoverStyle: {\n      marginRight: 15,\n      padding: \"50px\",\n      textDecoration: \"none\",\n      color: \"gray\",\n    },\n    selectedStyle: {\n      marginRight: 15,\n      padding: \"50px\",\n      textDecoration: \"none\",\n      color:\"#ed1c24\"\n    }\n  }\n  state = { hover:false }\n  handleHover = () => {\n    this.setState({hover:!this.state.hover});\n  }\n  render() {\n    let {linkStyle, hoverStyle, selectedStyle} = this.styles\n    , {name, url, selected} = this.props\n    , {hover} = this.state\n    , style = linkStyle;\n    if (hover) style = hoverStyle\n    if (selected) style = selectedStyle\n    return <Link href={url}>\n      <a onMouseEnter={this.handleHover} onMouseLeave={this.handleHover}\n      style={style}>{name}</a>\n    </Link>\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AARA;AACA;AADA;AACA;AAUA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAhBA;AACA;;;;;;AAmBA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AApCA;AACA;AAqCA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAdA;AACA;AAoBA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AArCA;;;;A","sourceRoot":""}